<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>rzd.pktbcki</groupId>
  <artifactId>auditsystem-user-management</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>starter Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

      <thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
      <springframework.version>4.3.17.RELEASE</springframework.version>
      <spring-webmvc.version>4.3.17.RELEASE</spring-webmvc.version>
      <thymeleaf-layout-dialect.version>2.3.0</thymeleaf-layout-dialect.version>

      <validation-api.version>2.0.1.Final</validation-api.version>


      <mybatis.version>3.4.6</mybatis.version>
      <mybatis-spring.version>1.3.2</mybatis-spring.version>

      <hsqldb.version>2.4.1</hsqldb.version>

      <!--<shiro.version>1.3.2</shiro.version>-->
      <shiro.version>1.4.0</shiro.version>
  </properties>

  <dependencies>

      <dependency>
          <groupId>org.thymeleaf</groupId>
          <artifactId>thymeleaf-spring4</artifactId>
          <version>${thymeleaf.version}</version>
      </dependency>

      <dependency>
          <groupId>org.thymeleaf</groupId>
          <artifactId>thymeleaf</artifactId>
          <version>${thymeleaf.version}</version>
      </dependency>

      <dependency>
          <groupId>nz.net.ultraq.thymeleaf</groupId>
          <artifactId>thymeleaf-layout-dialect</artifactId>
          <version>${thymeleaf-layout-dialect.version}</version>
          <!--<version>2.0.4</version>-->
      </dependency>

      <!-- Spring MVC Dependency -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
          <version>${springframework.version}</version>
      </dependency>



<!--
      <dependency>
        <groupId>com.ibm.tools.target</groupId>
        <artifactId>was</artifactId>
        <version>8.5.5</version>
        <type>pom</type>
        <scope>provided</scope>
      </dependency>
-->

      <dependency>
            <groupId>net.wasdev.maven.tools.targets</groupId>
            <artifactId>liberty-target</artifactId>
            <version>8.5.5.9</version>
            <type>pom</type>
            <scope>provided</scope>
      </dependency>

      <!-- Servlet Dependency -->
<!--
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        &lt;!&ndash;<version>3.1.0</version>&ndash;&gt;
          <version>3.0.1</version>
        <scope>provided</scope>
      </dependency>
-->

      <!-- JSP Dependency -->
<!--
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
          <artifactId>jsp-api</artifactId>
        <version>2.2</version>
          &lt;!&ndash;<artifactId>javax.servlet.jsp-api</artifactId>&ndash;&gt;
          &lt;!&ndash;<version>2.3.1</version>&ndash;&gt;
        <scope>provided</scope>
      </dependency>
-->
<!--
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
      </dependency>
-->
        <!--liberty have javax.validation 1.1.0-->
      <!-- https://mvnrepository.com/artifact/javax.validation/validation-api -->
      <dependency>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
          <version>${validation-api.version}</version>
      </dependency>
<!--
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
-->
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis</artifactId>
          <version>${mybatis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>${mybatis-spring.version}</version>
      </dependency>

      <!-- Spring JDBC -->
    		<dependency>
    			<groupId>org.springframework</groupId>
    			<artifactId>spring-jdbc</artifactId>
    			<version>${springframework.version}</version>
    		</dependency>
    <!--delete after on realizae-->
      <!-- HyperSQL DB -->
    		<dependency>
    			<groupId>org.hsqldb</groupId>
    			<artifactId>hsqldb</artifactId>
    			<version>${hsqldb.version}</version>
    		</dependency>

      <!--A Java library for generating String that match a given regular expression. it help you generate all Strings that matches a given Regex, random one , or one String from the matched String based on it's index. Generex is based on the library http://www.brics.dk/~amoeller/automaton/.-->
      <dependency>
        <groupId>com.github.mifmif</groupId>
        <artifactId>generex</artifactId>
        <version>1.0.2</version>
      </dependency>

      <!-- Shiro dependencies: -->
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-core</artifactId>
          <version>${shiro.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-web</artifactId>
          <version>${shiro.version}</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring -->
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-spring</artifactId>
          <version>${shiro.version}</version>
      </dependency>


  </dependencies>

  <build>
    <finalName>starter</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
            <configuration>
                <source>1.7</source>
                <target>1.7</target>
            </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
            <configuration>
                <!--<warSourceDirectory>src/main/webapp</warSourceDirectory>-->
                <!--<warName>Spring4MVCHelloWorldNoXMLDemo</warName>-->
                <!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
            </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>


          <!-- Embedded Apache Tomcat required for testing war -->
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.2</version>
              <configuration>
                  <port>81</port>
                  <path>/userMangment</path>
                  <contextFile>${basedir}/src/main/resources/maven-tomcat-plugin/context.xml</contextFile>
              </configuration>
            <executions>
              <execution>
                <id>tomcat-run</id>
                <goals>
                  <goal>exec-war-only</goal>
                </goals>
                <phase>package</phase>
                <configuration>

                  <!-- optional only if you want to use a preconfigured server.xml file -->
                  <!--<serverXml>src/main/tomcatconf/server.xml</serverXml>-->
                  <!-- optional values which can be configurable -->
                  <!--<attachArtifactClassifier>default value is exec-war but you can customize</attachArtifactClassifier>-->
                  <!--<attachArtifactClassifierType>default value is jar</attachArtifactClassifierType>-->
                </configuration>
              </execution>
            </executions>
              <dependencies>
                  <dependency>
                      <groupId>javax.servlet</groupId>
                      <artifactId>jstl</artifactId>
                      <version>1.2</version>
                  </dependency>
                  <dependency>
                      <groupId>org.hsqldb</groupId>
                      <artifactId>hsqldb</artifactId>
                      <version>${hsqldb.version}</version>
                  </dependency>

              </dependencies>
          </plugin>

          <!-- Embedded Jetty HTTP Server for testing war application -->
          <plugin>
             <groupId>org.eclipse.jetty</groupId>
             <artifactId>jetty-maven-plugin</artifactId>
             <version>9.4.8.v20171121</version>
          </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
